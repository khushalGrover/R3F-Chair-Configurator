/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 .\public\Models\v2\chairs_2.gltf 
*/

import React, { useEffect, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useCustomization } from "../Constants/Customization";

export function Chairs_2(props) {
	const { nodes, materials } = useGLTF("./Models/v2/chairs_2.gltf");
	const { arms, legs, back, cushion, seat } = useCustomization();

	return (
		<group {...props} dispose={null} scale={[0.1, 0.1, 0.1]}>
			<mesh
				geometry={nodes.classic_Arm.geometry}
				material={materials.chair}
				visible={arms === 1 && arms !== 0}
			/>
			<mesh
				geometry={nodes.classic_Back.geometry}
				material={materials.chair}
				visible={back === 1 && back !== 0}
			/>
			<mesh
				geometry={nodes.classic_Cushion.geometry}
				material={materials.chair}
				visible={cushion === 1 && cushion !== 0}
			/>
			<mesh
				geometry={nodes.classic_Seat.geometry}
				material={materials.chair}
				visible={seat === 1}
			/>
			<mesh
				geometry={nodes.classic_Legs.geometry}
				material={materials.chair}
				visible={legs === 1}
			/>
			<mesh
				geometry={nodes.mdr_Arm.geometry}
				material={materials.chair}
				visible={arms === 2 && arms !== 0}
			/>
			<mesh
				geometry={nodes.mdr_Back.geometry}
				material={materials.chair}
				visible={back === 2 && back !== 0}
			/>
			<mesh
				geometry={nodes.mdr_Cushion.geometry}
				material={materials.chair}
				visible={cushion === 2 && cushion !== 0}
			/>
			<mesh
				geometry={nodes.mdr_Legs.geometry}
				material={materials.chair}
				visible={legs === 2}
			/>
			<mesh
				geometry={nodes.mdr_Seat.geometry}
				material={materials.chair}
				visible={seat === 2}
			/>
		</group>
	);
}

useGLTF.preload("./Models/v2/chairs_2.gltf");
